environ({'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPDATA': 'C:\\Users\\Jankat\\AppData\\Roaming', 'CHROME_CRASHPAD_PIPE_NAME': '\\\\.\\pipe\\crashpad_15780_CNBPUPSIYPFXFDGR', 'CHROME_RESTART': 'Google Chrome|Of! Google Chrome kilitlendi. Şimdi yeniden başlatılsın mı?|LEFT_TO_RIGHT', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'DESKTOP-B9DB6U8', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\Jankat', 'LOCALAPPDATA': 'C:\\Users\\Jankat\\AppData\\Local', 'LOGONSERVER': '\\\\DESKTOP-B9DB6U8', 'NUMBER_OF_PROCESSORS': '8', 'ONEDRIVE': 'C:\\Users\\Jankat\\OneDrive', 'ONEDRIVECONSUMER': 'C:\\Users\\Jankat\\OneDrive', 'OS': 'Windows_NT', 'PATH': 'C:\\Users\\Jankat\\AppData\\Local\\Temp\\_MEI170442\\pywin32_system32;C:\\Program Files\\Google\\Chrome\\Application;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\Git\\cmd;C:\\Users\\Jankat\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Jankat\\AppData\\Local\\Programs\\Microsoft VS Code\\bin', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 158 Stepping 9, GenuineIntel', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_REVISION': '9e09', 'PROGRAMDATA': 'C:\\ProgramData', 'PROGRAMFILES': 'C:\\Program Files', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PROGRAMW6432': 'C:\\Program Files', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules', 'PUBLIC': 'C:\\Users\\Public', 'SESSIONNAME': 'Console', 'SYSTEMDRIVE': 'C:', 'SYSTEMROOT': 'C:\\WINDOWS', 'TEMP': 'C:\\Users\\Jankat\\AppData\\Local\\Temp', 'TMP': 'C:\\Users\\Jankat\\AppData\\Local\\Temp', 'USERDOMAIN': 'DESKTOP-B9DB6U8', 'USERDOMAIN_ROAMINGPROFILE': 'DESKTOP-B9DB6U8', 'USERNAME': 'Jankat', 'USERPROFILE': 'C:\\Users\\Jankat', 'VBOX_MSI_INSTALL_PATH': 'C:\\Program Files\\Oracle\\VirtualBox\\', 'WINDIR': 'C:\\WINDOWS', '__COMPAT_LAYER': 'DetectorsAppHealth'})